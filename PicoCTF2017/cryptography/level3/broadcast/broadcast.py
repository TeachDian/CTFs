#!/bin/python3

import binascii

# the given information
e = 3
c1 = 261345950255088824199206969589297492768083568554363001807292202086148198406074174087599949853526183725967067833548807700003242116447746845440684134251660304329137959138520358243308203606301658523591058739042432952619448086647193337265971245145812964921635172967644877116033878019171669996959913243573262905352
n1 = 1001191535967882284769094654562963158339094991366537360172618359025855097846977704928598237040115495676223744383629803332394884046043603063054821999994629411352862317941517957323746992871914047324555019615398720677218748535278252779545622933662625193622517947605928420931496443792865516592262228294965047903627
c2 = 147535246350781145803699087910221608128508531245679654307942476916759248177185257800509654502604804274016979933266589612202725825700391959444409062358822225723990027527297006978244654606302532267233009201147158408744883222082702546984956726569203304884883611514054090179844394974632291986608151788475105033841
n2 = 405864605704280029572517043538873770190562953923346989456102827133294619540434679181357855400199671537151039095796094162418263148474324455458511633891792967156338297585653540910958574924436510557629146762715107527852413979916669819333765187674010542434580990241759130158992365304284892615408513239024879592309
c3 = 633230627388596886579908367739501184580838393691617645602928172655297372011201023715698247545128732683701168969876752613788489811859334308151035580367022645613275345197226463059204068925526462215747374938053085247530963311728051220282203348788536162008752905647387811366287564542709387347113984861614875521973
n3 = 1204664380009414697639782865058772653140636684336678901863196025928054706723976869222235722439176825580211657044153004521482757717615318907205106770256270292154250168657084197056536811063984234635803887040926920542363612936352393496049379544437329226857538524494283148837536712608224655107228808472106636903723

# run this to compute me, it is pre-computed below
# mod = n1
# me = c1
# for c, n in zip([c2,c3],[n2,n3]):
#     while me % n != c:
#         me += mod
#     mod *= n
# print(me)

me = 43909970302662972750393764059768893654343919240079650534053968083360755521252766659253616131413067709631249954705921262717622794768017199029523068927712592521503670245069486553653544617550662782616363102037566595672337786880103536915704758751141766051653593782567071145473219876925561500606328233998741364596739626776

def find_invpow(x,n):
    """Finds the integer component of the n'th root of x,
    an integer such that y ** n <= x < (y + 1) ** n.
    """
    high = 1
    while high ** n <= x:
        high *= 2
    low = high // 2
    while low < high:
        mid = (low + high) // 2
        if low < mid and mid**n < x:
            low = mid
        elif high > mid and mid**n > x:
            high = mid
        else:
            return mid
    return mid + 1

m = find_invpow(me, 3)
text = binascii.unhexlify(format(m, "#04x")[2::])
print(text)

